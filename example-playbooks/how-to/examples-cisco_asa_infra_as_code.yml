#In this playbook the individual modules are looped via with_items to perform multiple tasks
#The input yaml file provides a model of the configuration of the ASA

---
- name: ASA Configuration
  hosts: asa
  connection: local
  gather_facts: True

  tasks:
  - include_vars: "{{playbook_dir}}/../../passwords.yml"
    no_log: True
  - include_vars: YAML_file_describing_ASA.yml

  - debug: var=inventory_hostname

  - name: Create Svc Object Groups
    cisco_asa_service_objectgroup_members:
       host: "{{ inventory_hostname }}"
       username: "{{username}}"
       password: "{{password}}"
       name: "{{item['name']}}"
       state: "{{item['state'] | default('present')}}"
       entry_state: "{{item['entry_state'] | default('present')}}"
       protocol: "{{item['protocol']}}"
       members: "{{ item['values'] }}"
       validate_certs: False
    with_items: "{{svc_object_groups}}"

  - name: Create Net Object Groups
    cisco_asa_network_objectgroup_members:
      host: "{{ inventory_hostname }}"
      username: "{{username}}"
      password: "{{password}}"
      name: "{{item['name']}}"
      state: "{{item['state'] | default('present')}}"
      entry_state: "{{item['entry_state'] | default('present')}}"
      members: "{{ item['values'] }}"
      validate_certs: False
    #when: item['state'] == 'present'
    with_items: "{{net_object_groups}}"
    #ignore_errors: True
     
  - name: Create ACL
    cisco_asa_create_acl:
       host: "{{ inventory_hostname }}"
       username: "{{username}}"
       password: "{{password}}"
       acl_name: "{{item['name']}}"
       permit: "{{item['permit'] | default(True)}}"
       protocol: "{{item.protocol}}"
       entry: "{{item['entry']}}"
       position: 1 #position 1 should be fine for all entries unless a deny
       state: "{{item['state'] | default('present')}}"
       validate_certs: False
    with_items: "{{ access_lists }}"
           
  - name: Routes
    cisco_asa_route:
       host: "{{ inventory_hostname }}"
       username: "{{username}}"
       password: "{{password}}"
       next_hop: "{{item['next_hop']}}"
       interface: "{{item['interface']}}"
       network: "{{item['network']}}"  
       state: present
       validate_certs: False
    with_items: "{{static_routes}}"

  - name: CLI Command
    cisco_asa_cli:
        host: "{{ inventory_hostname }}"
        username: "{{username}}"
        password: "{{password}}"
        cli: "{{item}}"
        validate_certs: False
    with_items: "{{cli_commands}}"
    ignore_errors: True

  - name: Save Config
    cisco_asa_write_mem:
        host: "{{ inventory_hostname }}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
